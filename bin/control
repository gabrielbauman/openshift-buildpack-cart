#!/bin/bash

STOPTIMEOUT=10
FMT="%a %b %d %Y %H:%M:%S GMT%z (%Z)"


indent() {
  sed -u 's/^/ /'
}

message() {
  echo "-----> $*"
}

function is_running() {
    return 1
}

function status() {
    if [ is_running ]; then
        client_result "Application is running"
    else
        client_result "Application is not running"
    fi
}


function start() {
    echo
}

function stop() {
    echo
}

function restart() {
    stop
    start
}

function build() {
    if [ -z $BUILDPACK_URL ]; then
        message "No BUILDPACK_URL specified, application will not be built"
        exit 1;
    fi
    PACK_ID=($(echo $BUILDPACK_URL | md5sum))
    PACK_DIR="packs/$PACK_ID"
    if [ -d $PACK_DIR ] && [ -f $PACK_DIR/.complete ]; then
        message "Using cached buildpack"
    else
        mkdir -p $PACK_DIR
        if [[ $BUILDPACK_URL = "git@"* ]] || [[ $BUILDPACK_URL = "git://"* ]] || [[ $BUILDPACK_URL = *".git" ]]; then
            if (git clone $BUILDPACK_URL $PACK_DIR); then
                echo
            else
                message "Unable to clone $BUILDPACK_URL"
                exit 1
            fi
        elif [[ $BUILDPACK_URL = "http://"* ]] || [[ $BUILDPACK_URL = "https://"* ]]; then
            if (wget -O $BUILDPACK_URL | tar xvz -C $PACK_DIR); then
                echo
            else
                message "Unable to download and extract $BUILDPACK_URL"
                exit 1
            fi
        else
            message "BUILDPACK_URL not recognized"
            exit 1
        fi
        touch $PACK_DIR/.complete
    fi
    OUT=$($PACK_DIR/bin/detect $OPENSHIFT_REPO_DIR)
    ret=$?
    if [ $ret -ne 0 ]; then
        echo "bin/detect reported the source is not recognizable"
        exit 1
    fi
    message "Building framework '$OUT'"

    $PACK_DIR/bin/compile $OPENSHIFT_REPO_DIR $(pwd)/cache
    ret=$?
    if [ $ret -ne 0 ]; then
        message "Build failed"
        exit 1
    fi
}

function post-deploy() {
    echo
}

function pre-build() {
    echo
}

function tidy() {
  client_message "Emptying log dir: $OPENSHIFT_BUILDPACK_DIR/logs"
  shopt -s dotglob
  rm -rf $OPENSHIFT_BUILDPACK_DIR/logs/*
  rm -rf $OPENSHIFT_BUILDPACK_DIR/tmp/*
}

#
#  main():
#

# Ensure arguments.
if ! [ $# -eq 1 ]; then
    echo "Usage: $0 [start|restart|graceful|graceful-stop|stop|status]"
    exit 1
fi

# Source utility functions.
source $OPENSHIFT_CARTRIDGE_SDK_BASH

# Handle commands.
case "$1" in
    start)               start       ;;
    restart|graceful)    restart     ;;
    graceful-stop|stop)  stop        ;;
    status)              status      ;;
    build)               build       ;;
    pre-build)           pre-build   ;;
    post-deploy)         post-deploy ;;
    tidy)                tidy        ;;
    *) exit 0;
esac

